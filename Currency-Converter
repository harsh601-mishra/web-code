import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;

import org.json.JSONObject;

/**
 * A straightforward currency converter that fetches real-time exchange rates
 * and converts an amount from one currency to another based on user input.
 */
public class CurrencyConverter {

    // TODO: Insert your API key here before running the program.
    private static final String API_KEY = "YOUR_API_KEY";

    // API endpoint to get latest exchange rates.
    private static final String API_URL = "https://api.exchangeratesapi.io/latest";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        try {
            System.out.print("Enter base currency code (e.g., USD): ");
            String baseCurrency = scanner.nextLine().trim().toUpperCase();

            System.out.print("Enter target currency code (e.g., EUR): ");
            String targetCurrency = scanner.nextLine().trim().toUpperCase();

            System.out.print("Enter the amount to convert: ");
            double amount = scanner.nextDouble();

            // Fetch exchange rate; returns -1 if failed.
            double exchangeRate = fetchExchangeRate(baseCurrency, targetCurrency);

            if (exchangeRate < 0) {
                System.out.println("Unable to retrieve exchange rate. Please verify currency codes or try again later.");
            } else {
                double convertedAmount = amount * exchangeRate;
                System.out.printf("%.2f %s equals %.2f %s%n", amount, baseCurrency, convertedAmount, targetCurrency);
            }

        } catch (Exception e) {
            System.out.println("Oops! Something went wrong: " + e.getMessage());
        } finally {
            scanner.close();
        }
    }

    /**
     * Makes a HTTP GET request to the currency rates API and parses the JSON response 
     * to get the exchange rate from base to target currency.
     * 
     * @return Exchange rate as double, or -1 if an error occurs.
     */
    private static double fetchExchangeRate(String base, String target) {
        try {
            String requestUrl = String.format("%s?base=%s&symbols=%s&access_key=%s", API_URL, base, target, API_KEY);

            URL url = new URL(requestUrl);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");

            int statusCode = connection.getResponseCode();
            if (statusCode != HttpURLConnection.HTTP_OK) {
                System.out.println("Failed to connect to API: HTTP " + statusCode);
                return -1;
            }

            try (BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))) {
                StringBuilder responseBuilder = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    responseBuilder.append(line);
                }
                JSONObject jsonResponse = new JSONObject(responseBuilder.toString());

                // Ensure 'rates' key exists and contains target currency rate
                if (!jsonResponse.has("rates") || !jsonResponse.getJSONObject("rates").has(target)) {
                    System.out.println("Exchange rate information not found for: " + target);
                    return -1;
                }

                return jsonResponse.getJSONObject("rates").getDouble(target);
            }

        } catch (Exception e) {
            System.out.println("Error during exchange rate retrieval: " + e.getMessage());
            return -1;
        }
    }
}
